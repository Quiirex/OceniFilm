// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ocenjevanje.API.Data;

#nullable disable

namespace Ocenjevanje.API.Migrations
{
    [DbContext(typeof(OcenjevanjeDbContext))]
    partial class OcenjevanjeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ocenjevanje.API.Models.Ocena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumOcene")
                        .HasColumnType("datetime2");

                    b.Property<int>("OcenjenFilmId")
                        .HasColumnType("int");

                    b.Property<int>("OcenjevalecId")
                        .HasColumnType("int");

                    b.Property<int>("Vrednost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OcenjenFilmId");

                    b.HasIndex("OcenjevalecId");

                    b.ToTable("Ocene");
                });

            modelBuilder.Entity("Ocenjevanje.API.Models.OcenjenFilm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OcenjenFilm");
                });

            modelBuilder.Entity("Ocenjevanje.API.Models.Ocenjevalec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PrikaznoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ocenjevalec");
                });

            modelBuilder.Entity("Ocenjevanje.API.Models.Ocena", b =>
                {
                    b.HasOne("Ocenjevanje.API.Models.OcenjenFilm", "OcenjenFilm")
                        .WithMany()
                        .HasForeignKey("OcenjenFilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ocenjevanje.API.Models.Ocenjevalec", "Ocenjevalec")
                        .WithMany()
                        .HasForeignKey("OcenjevalecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OcenjenFilm");

                    b.Navigation("Ocenjevalec");
                });
#pragma warning restore 612, 618
        }
    }
}
