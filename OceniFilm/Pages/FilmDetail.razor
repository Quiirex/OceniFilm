@page "/film/{naslovFilma}"
@using OceniFilm.Models.Videoteka
@using OceniFilm.Models.Komentiranje
@using OceniFilm.Models.Ocenjevanje
@using OceniFilm.Services
@using System.Linq

@if (fetchedFilm != null)
    {
        <Div style="margin-top: 16px !important; margin-bottom: 16px !important;">
            <Row>
                <Column ColumnSize="ColumnSize.Is12">
                    <Alert Class="custom-alert-dark" Color="Color.Dark" Visible>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is10">
                                <b style="font-size: 30px !important;">@naslovFilma</b>
                                <AuthorizeView>
                                    <Authorized>
                                        <Button class="card-btn" Color="Color.Light" Style="margin-bottom: 8px; margin-left: 5px;" Outline data-toggle="tooltip" data-placement="top" title="Dodaj ta film na seznam" Clicked="@ShowPlaylistModal">
                                            <Icon Name="IconName.PlusSquare"></Icon>
                                        </Button>
                                    </Authorized>
                                    <NotAuthorized></NotAuthorized>
                                </AuthorizeView>
                                <p style="margin-bottom: 5px !important;">@fetchedFilm.LetoIzdaje • @fetchedFilm.PGOcena • @fetchedFilm.Dolzina min</p>
                                @foreach (var zanr in fetchedFilm.SeznamZanrov)
                                {
                                    <Badge Color="Color.Dark" style="margin-right: 5px">@zanr.Naziv</Badge>
                                }
                            </Column>
                            <Column ColumnSize="ColumnSize.Is2" Style="padding-left: 70px;">
                                <Row Class="align-items-center justify-content-center">
                                    <b>IMDB Ocena</b>
                                </Row>
                                <Row Class="align-items-center justify-content-center">
                                    <Icon Name="IconName.Star" style="color: gold; padding-right: 5px; margin-bottom: 4px;"></Icon> @fetchedFilm.ImdbOcena/10
                                </Row>
                                <AuthorizeView>
                                    <Authorized>
                                        
                                        <Row Class="align-items-center justify-content-center">
                                            <b>Moja Ocena</b>
                                        </Row>
                                        <Row Class="align-items-center justify-content-center">
                                            <Button class="card-btn" Color="Color.Light" Outline data-toggle="tooltip" data-placement="top" title="Oceni ta film" Clicked="@ShowRatingModal">
                                                <Icon Name="IconName.Star" IconStyle="IconStyle.Regular" style="padding-right: 5px; margin-bottom: 4px;"></Icon>
                                            </Button>
                                            @fetchedOcena.Vrednost/10
                                        </Row>
                                    </Authorized>
                                    <NotAuthorized></NotAuthorized>
                                </AuthorizeView>
                            </Column>
                        </Row>
                    </Alert>
                </Column>
            </Row>
            <Row Style="margin-bottom: 0.5rem !important" Class="customRowStyling">
                <Column Class="customColumnStyling" ColumnSize="ColumnSize.Is4">
                    <Card>
                        <CardImage Source="@fetchedFilm.Poster" Alt="@naslovFilma" style="height: 480px !important;"></CardImage>
                    </Card>
                </Column>
                <Column Class="customColumnStyling" ColumnSize="ColumnSize.Is8">
                    <iframe style="border: 1px solid white;" width="728" height="482" src="https://www.youtube.com/embed/@fetchedFilm.Napovednik" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </Column>
            </Row>
            <Row>
                <Column ColumnSize="ColumnSize.Is12">
                    <Alert Class="custom-alert-dark" Color="Color.Dark" Visible>
                        <b style="font-size: 25px !important; margin-bottom: 10px !important;">Opis</b> <Icon Name="IconName.AlignJustify" Style="padding-left: 5px;"></Icon>
                        <p style="font-size: 0.9rem !important;">
                           @fetchedFilm.Opis
                        </p>
                    </Alert>
                </Column>
            </Row>
            <Row>
                <Column ColumnSize="ColumnSize.Is12">
                    <Alert Class="custom-alert-dark" Color="Color.Dark" Visible>
                        <b style="font-size: 25px !important; margin-bottom: 10px !important;">Igralci</b> <Icon Name="IconName.Users" Style="padding-left: 5px;"></Icon>
                        <ListGroup Flush>
                            <ListGroupItem style="background-color: black !important; border-bottom: 1px solid white !important;">Režiser <Icon Name="IconName.AngleRight" Style="padding-left: 5px; padding-right: 5px;"></Icon><a>@fetchedFilm.Reziser.Ime @fetchedFilm.Reziser.Priimek</a></ListGroupItem>
                            <ListGroupItem style="background-color: black !important;">Glavni igralci <Icon Name="IconName.AngleRight" Style="padding-left: 5px; padding-right: 5px;"></Icon>
                            @foreach (var igralec in fetchedFilm.SeznamIgralcev)
                                {
                                <a href="#">&nbsp;@igralec.Ime @igralec.Priimek •</a>
                                }
                            </ListGroupItem>
                        </ListGroup>
                    </Alert>
                </Column>
            </Row>
            <Row>
                <Column ColumnSize="ColumnSize.Is12">
                    <Alert Class="custom-alert-dark" Color="Color.Dark" Visible>
                        <b style="font-size: 25px !important; margin-bottom: 10px !important;">Komentarji</b> <Icon Name="IconName.Comments" IconStyle="IconStyle.Regular" Style="padding-left: 5px;"></Icon>
                        <AuthorizeView>
                            <Authorized>
                                <Button class="card-btn" Color="Color.Light" Outline style="float: right;" data-toggle="tooltip" data-placement="top" title="Komentiraj" Clicked="@ShowCommentModal">
                                    <Icon Name="IconName.Comment"></Icon>
                                </Button>
                            </Authorized>
                            <NotAuthorized></NotAuthorized>
                        </AuthorizeView>
                        @if (fetchedKomentarji != null)
                            {
                    <ListGroup Flush>
                        @foreach (var komentar in fetchedKomentarji)
                        {
                            @if (!komentar.Equals(lastKomentar))
                            {
                                <ListGroupItem style="background-color: black !important; border-bottom: 1px solid white !important;">
                                    <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                                        <Heading Size="HeadingSize.Is6" Margin="Margin.Is1.FromBottom"><b>@komentar.Komentator.PrikaznoIme</b></Heading>
                                        <Small TextColor="TextColor.Muted">@komentar.DatumZapisa</Small>
                                    </Div>
                                    <Paragraph Style="font-size: 0.9rem" Margin="Margin.Is1.FromBottom">@komentar.Vsebina</Paragraph>
                                </ListGroupItem>
                            }
                            else
                            {
                                <ListGroupItem style="background-color: black !important;">
                                    <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                                        <Heading Size="HeadingSize.Is6" Margin="Margin.Is1.FromBottom"><b>@komentar.Komentator.PrikaznoIme</b></Heading>
                                        <Small TextColor="TextColor.Muted">@komentar.DatumZapisa</Small>
                                    </Div>
                                    <Paragraph Style="font-size: 0.9rem" Margin="Margin.Is1.FromBottom">@komentar.Vsebina</Paragraph>
                                </ListGroupItem>
                            }
                        }
                    </ListGroup>
                            }
                            @if (!fetchedKomentarji.Any())
                            {
                                <p>Ta film nima komentarjev!</p>
                            }
                    </Alert>
                </Column>
            </Row>
        </Div>

        <PlaylistModal @bind-playlistModalVisible="playlistModalVisible" />
        <RatingModal @bind-ratingModalVisible="ratingModalVisible" mojaOcena="mojaOcena" mojaOcenaChanged="@RefreshRating" imdbOcena="@imdbOcena" naslovFilma="@fetchedFilm.Naslov" letoIzdaje="@fetchedFilm.LetoIzdaje"/>
        <CommentModal @bind-commentModalVisible="commentModalVisible"></CommentModal>
    }

@code {
    public bool ratingModalVisible { get; set; } = false;
    public bool playlistModalVisible { get; set; } = false;
    public bool commentModalVisible { get; set; } = false;

    [Inject]
    public IFilmService FilmService { get; set; }

    [Inject]
    public ICommentService CommentService { get; set; }

    [Inject]
    public IRatingService RatingService { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = null!;

    [Parameter]
    public string naslovFilma { get; set; } = string.Empty;

    private int imdbOcena { get; set; }

    private int mojaOcena { get; set; }

    private Film? fetchedFilm { get; set; }

    private IEnumerable<Komentar>? fetchedKomentarji { get; set; }

    private Komentar? lastKomentar { get; set; }

    private Ocena? fetchedOcena { get; set; }

    protected override async Task OnInitializedAsync()
    {
        fetchedFilm = await FilmService.GetFilmByTitleAsync(naslovFilma);
        fetchedKomentarji = await CommentService.GetCommentsByFilmAsync(naslovFilma);
        if (fetchedKomentarji.Any())
        {
            lastKomentar = fetchedKomentarji.Last();
        }
        AuthenticationState authState = await authenticationState;
        if (authState.User.Identity.IsAuthenticated)
        {
            fetchedOcena = await RatingService.GetOcenaByTitleAndUserAsync(naslovFilma, authState.User.Identity.Name);
            mojaOcena = fetchedOcena.Vrednost.GetValueOrDefault();
        }
        imdbOcena = fetchedFilm.ImdbOcena;
    }

    public async void RefreshRating()
    {
        AuthenticationState authState = await authenticationState;
        fetchedOcena = await RatingService.GetOcenaByTitleAndUserAsync(naslovFilma, authState.User.Identity.Name);
        mojaOcena = fetchedOcena.Vrednost.GetValueOrDefault();
        this.StateHasChanged();
    }

    private Task ShowRatingModal()
    {
        ratingModalVisible = true;
        return Task.CompletedTask;
    }

    private Task ShowPlaylistModal()
    {
        playlistModalVisible = true;
        return Task.CompletedTask;
    }

    private Task ShowCommentModal()
    {
        commentModalVisible = true;
        return Task.CompletedTask;
    }
}
