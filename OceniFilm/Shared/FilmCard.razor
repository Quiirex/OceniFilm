@using OceniFilm.Models.Videoteka

<Card style="margin: 0">
    <a href="/film/@naslov" target="_blank">
        <CardImage Source="@poster" Alt="@naslov" style="height: 500px !important;"></CardImage>
    </a>
    <CardBody>
        <p style="margin: 0">
            <Icon Name="IconName.Star" style="color: gold"></Icon> @imdbOcena/10
        </p>
        <CardTitle Size="5" style="margin-bottom: 0">@naslov (@letoIzdaje)</CardTitle>
        <div style="margin-bottom: 10px;">
            @if (seznamZanrov != null)
            {
                @foreach (var zanr in seznamZanrov) 
                { 
                    <Badge Color="Color.Dark" style="margin-right: 5px">@zanr.Naziv</Badge>
                }
            }
        </div>
        <CardSubtitle style="font-size: 12px; min-height: 28.78px;">
            @if (seznamIgralcev != null)
            {
                @foreach (var igralec in seznamIgralcev)
                {
                    @if (!igralec.Equals(lastIgralec))
                    {
                        <a class="actor-hover" @onclick="(() => ShowIgralecModal(igralec.Ime, igralec.Priimek))">&nbsp;@igralec.Ime @igralec.Priimek •</a>
                    }
                    else
                    {
                        <a class="actor-hover" @onclick="(() => ShowIgralecModal(igralec.Ime, igralec.Priimek))">&nbsp;@igralec.Ime @igralec.Priimek</a>
                    }
                }
            }
        </CardSubtitle>
        <CardText style="margin-bottom: 10px">

        </CardText>
        <Button class="card-btn" Color="Color.Light" Outline style="float: left" data-toggle="tooltip" data-placement="top" title="Oglej si napovednik filma" Clicked="@ShowTrailerModal"><Icon Name="IconName.PlayCircle"></Icon> Napovednik</Button>
        <AuthorizeView>
            <Authorized>
                <Button class="card-btn" Color="Color.Light" Outline style="float: right" data-toggle="tooltip" data-placement="top" title="Dodaj ta film na seznam" Clicked="@ShowPlaylistModal">
                    <Icon Name="IconName.PlusSquare"></Icon>
                </Button>
            </Authorized>
            <NotAuthorized></NotAuthorized>
        </AuthorizeView>
    </CardBody>
</Card>

<PlaylistModal @bind-playlistModalVisible="playlistModalVisible" poster="@poster" naslovFilma="@naslov" letoIzdaje="@letoIzdaje"/>
<TrailerModal @bind-trailerModalVisible="trailerModalVisible" Url="@napovednikUrl"/>
<IgralecModal @bind-igralecModalVisible="igralecModalVisible" imeIgralca="@imeIgralcaPassed" priimekIgralca="@priimekIgralcaPassed"></IgralecModal>


@code {
    public bool playlistModalVisible { get; set; } = false;
    public bool trailerModalVisible { get; set; } = false;
    public bool igralecModalVisible { get; set; } = false;

    [Parameter]
    public string poster { get; set; } = string.Empty;

    [Parameter]
    public int imdbOcena { get; set; }

    [Parameter]
    public string naslov { get; set; } = string.Empty;

    [Parameter]
    public int letoIzdaje { get; set; }

    [Parameter]
    public List<Zanr> seznamZanrov { get; set; } = new();

    [Parameter]
    public List<IgralecFilma> seznamIgralcev { get; set; } = new();

    [Parameter]
    public string napovednikUrl { get; set; } = string.Empty;

    private IgralecFilma? lastIgralec { get; set; }

    public string imeIgralcaPassed { get; set; } = string.Empty;

    public string priimekIgralcaPassed { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if (seznamIgralcev.Any())
        {
            lastIgralec = seznamIgralcev.Last();
        }
    }

    private Task ShowPlaylistModal()
    {
        playlistModalVisible = true;
        return Task.CompletedTask;
    }

    private Task ShowTrailerModal()
    {
        trailerModalVisible = true;
        return Task.CompletedTask;
    }

    private Task ShowIgralecModal(string imeIgralca, string priimekIgralca)
    {
        imeIgralcaPassed = imeIgralca;
        priimekIgralcaPassed = priimekIgralca;
        igralecModalVisible = true;
        return Task.CompletedTask;
    }
}
