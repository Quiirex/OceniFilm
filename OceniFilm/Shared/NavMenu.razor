@using OceniFilm.Models.Videoteka
@using OceniFilm.Services
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<nav class="navbar navbar-expand-sm navbar-toggleable-sm custom-nav-bg-color border-bottom mb-3">
    <div class="container">
        <a class="navbar-brand nav-link custom-title-style" href="">Oceni Film</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex justify-content-between" @onclick="CollapseNavMenu">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link" href="" Match="NavLinkMatch.All">
                        <Icon Name="IconName.Video" style="padding-right: 5px"></Icon>Videoteka
                    </a>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <a class="nav-link" href="seznamifilmov" Match="NavLinkMatch.All">
                                <Icon Name="IconName.List" style="padding-right: 5px"></Icon>Moji seznami
                            </a>
                        </li>
                    </Authorized>
                    <NotAuthorized></NotAuthorized>
                </AuthorizeView>
            </ul>
            <Autocomplete style="width: 50% !important; margin-right: 25px !important;" 
                            TItem="Film"
                            TValue="string"
                            Data="@Filmi"
                            TextField="@(( item ) => item.Naslov)"
                            ValueField="@(( item ) => item.Naslov)"
                            @bind-SelectedValue="@selectedFilm"
                            @bind-SelectedText="selectedFilmInText"
                            @onclick="@SelectedValueChanged"
                            Placeholder="Išči film..."
                            Filter="AutocompleteFilter.StartsWith"
                            FreeTyping
                            CustomFilter="@(( item, searchValue ) => item.Naslov.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
                <NotFoundContent>Filma z naslovom "@context" ni bilo mogoče najti</NotFoundContent>
            </Autocomplete>
            <AuthorizeView>
                <Authorized>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link text-black" Match="NavLinkMatch.All">
                                <Icon Name="IconName.User" style="padding-right: 5px"></Icon>
                                @prikaznoIme
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-black" Match="NavLinkMatch.All" @onclick="LogOut">
                                <Icon Name="IconName.ArrowRight" style="padding-right: 5px"></Icon>
                                Izpis
                            </a>
                        </li>
                    </ul>
                </Authorized>
                <NotAuthorized>
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link text-black" href="registracija" Match="NavLinkMatch.All"><Icon Name="IconName.User" style="padding-right: 5px"></Icon>Registracija</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-black" href="prijava" Match="NavLinkMatch.All">
                                <Icon Name="IconName.ArrowRight" style="padding-right: 5px"></Icon>
                                Prijava
                            </a>
                        </li>
                    </ul>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</nav>


@code {
    [Inject]
    public IAuthService AuthService { get; set; }

    [Inject]
    public IFilmService FilmService { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = null!;

    private string prikaznoIme { get; set; } = null!;

    private Film Film { get; set; }

    private IEnumerable<Film> Filmi;

    private string selectedFilm { get; set; }

    private string selectedFilmInText { get; set; }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await authenticationState;
        if (authState.User.Identity.IsAuthenticated)
        {
            prikaznoIme = authState.User.Identity.Name;
        }

        Filmi = await FilmService.GetFilmiAsync();
    }

    private async void LogOut()
    {
        await JsRuntime.InvokeVoidAsync("localStorage.removeItem", "jwt");
        NavigationManager.NavigateTo("/prijava", true);
        this.StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }

    private Task SelectedValueChanged()
    {
        if (!String.IsNullOrEmpty(selectedFilm))
        {
            NavigationManager.NavigateTo("/film/" + selectedFilm, true);
            selectedFilm = string.Empty;
            return Task.CompletedTask;
        }
        return Task.CompletedTask;
    }
}