@using OceniFilm.Models.Seznami

@*Modalno okno za dodajanje filma na seznam*@
<Modal @bind-Visible="@playlistModalVisible" Closing="@OnModalClosing">
    <ModalContent Centered style="background-color: black; border-color: white;">
        <ModalHeader>
            <ModalTitle>!naslovFilma! (!letoIzdaje!)</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody Style="padding-top: 0 !important;">
            <Field Horizontal>
                <FieldBody ColumnSize="ColumnSize.Is12">
                    <FieldLabel>Izberi obstoječi seznam predvajanja</FieldLabel>
                    <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                        <Select @bind-SelectedValue="@izbraniSeznam">
                            @foreach(var sez in mockSeznam)
                            {
                                <SelectItem Value="@sez.NazivSeznama">@sez.NazivSeznama</SelectItem>
                            }
                        </Select>
                        <Button Color="Color.Light" Outline Clicked="@OnAddToPlaylist">
                            <Icon Name="IconName.PlusSquare"></Icon>
                        </Button>
                    </Div>
                </FieldBody>
                <FieldBody ColumnSize="ColumnSize.Is12">
                    <FieldLabel>Ustvari nov seznam predvajanja</FieldLabel>
                    <Div Flex="Flex.JustifyContent.Between" Width="Width.Is100">
                        <TextEdit @bind-Text="@noviSeznam" Placeholder="Vnesi ime seznama.."></TextEdit>
                        <Button Color="Color.Light" Outline Clicked="@OnAddPlaylist">
                            <Icon Name="IconName.PlusSquare"></Icon>
                        </Button>
                    </Div>
                </FieldBody>
            </Field>
        </ModalBody>
    </ModalContent>
</Modal>
<Snackbar @ref="snackbarToPlaylistAddSuccess">
  <SnackbarBody>
    Film uspešno dodan na seznam
  </SnackbarBody>
</Snackbar>
<Snackbar @ref="snackbarToPlaylistAddFailure" Color="SnackbarColor.Danger">
  <SnackbarBody>
    Prišlo je do napake pri dodajanju filma na izbrani seznam!
  </SnackbarBody>
</Snackbar>
<Snackbar @ref="snackbarPlaylistAddSuccess">
  <SnackbarBody>
    Nov seznam filmov uspešno dodan
  </SnackbarBody>
</Snackbar>
<Snackbar @ref="snackbarPlaylistAddFailure" Color="SnackbarColor.Danger">
  <SnackbarBody>
    Vnesite naziv novega seznama!
  </SnackbarBody>
</Snackbar>

@code {
    private string izbraniSeznam;
    private string noviSeznam;
    private Snackbar snackbarToPlaylistAddSuccess;
    private Snackbar snackbarToPlaylistAddFailure;
    private Snackbar snackbarPlaylistAddSuccess;
    private Snackbar snackbarPlaylistAddFailure;

    [Parameter]
    public bool playlistModalVisible { get; set; }

    [Parameter]
    public EventCallback<bool> playlistModalVisibleChanged { get; set; }

    private string selectedDropValue { get; set; } = "prazno";

    private List<SeznamFilmov> mockSeznam = new();

    protected override async Task OnInitializedAsync()
    {
        mockSeznam.Add(
            new SeznamFilmov
                {
                    Uporabnik = new Uporabnik { PrikaznoIme = "janezek12" },
                    NazivSeznama = "Prvi seznam",
                    Filmi = new List<Film>
                        {
                        new()
                        {
                            Naslov = "The Batman"
                        },
                        new()
                        {
                            Naslov = "Spider-Man: Homecoming"
                        },
                        new()
                        {
                            Naslov = "Titanic"
                        }
                        }
                }
        );
        mockSeznam.Add(
            new SeznamFilmov
                {
                    Uporabnik = new Uporabnik { PrikaznoIme = "Janez123" },
                    NazivSeznama = "Drugi seznam",
                    Filmi = new List<Film>
                        {
                        new()
                        {
                            Naslov = "The Batman"
                        },
                        new()
                        {
                            Naslov = "Spider-Man: Homecoming"
                        },
                        new()
                        {
                            Naslov = "Titanic"
                        }
                        }
                }
        );
        mockSeznam.Add(
            new SeznamFilmov
                {
                    Uporabnik = new Uporabnik { PrikaznoIme = "Janez123" },
                    NazivSeznama = "Slabi filmi",
                    Filmi = new List<Film>
                        {
                        new()
                        {
                            Naslov = "The Batman"
                        },
                        new()
                        {
                            Naslov = "Spider-Man: Homecoming"
                        },
                        new()
                        {
                            Naslov = "Titanic"
                        }
                        }
                }
        );
        await base.OnInitializedAsync();
    }

    private async Task OnModalClosing(ModalClosingEventArgs e)
    {
        playlistModalVisible = false;
        await playlistModalVisibleChanged.InvokeAsync(playlistModalVisible);
        return;
    }

    private async Task OnAddToPlaylist()
    {
        if (!String.IsNullOrEmpty(izbraniSeznam)) 
        {
            await snackbarToPlaylistAddFailure.Hide();
            await snackbarToPlaylistAddSuccess.Show();
        }
        else
        {
            await snackbarToPlaylistAddSuccess.Hide();
            await snackbarToPlaylistAddFailure.Show();
        }
    }

    private async Task OnAddPlaylist()
    {
        if (!String.IsNullOrEmpty(noviSeznam)) 
        {
            noviSeznam = string.Empty;
            await snackbarPlaylistAddFailure.Hide();
            await snackbarPlaylistAddSuccess.Show();
        }
        else
        {
            await snackbarPlaylistAddSuccess.Hide();
            await snackbarPlaylistAddFailure.Show();
        }
    }
}