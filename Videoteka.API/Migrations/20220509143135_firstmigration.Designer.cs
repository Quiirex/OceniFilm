// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Videoteka.API.Data;

#nullable disable

namespace Videoteka.API.Migrations
{
    [DbContext(typeof(VideotekaDbContext))]
    [Migration("20220509143135_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Videoteka.API.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Dolzina")
                        .HasColumnType("int");

                    b.Property<int>("ImdbOcena")
                        .HasColumnType("int");

                    b.Property<int>("LetoIzdaje")
                        .HasColumnType("int");

                    b.Property<string>("Napovednik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PGOcena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReziserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReziserId");

                    b.ToTable("Filmi");
                });

            modelBuilder.Entity("Videoteka.API.Models.IgralecFilma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("IgralecFilma");
                });

            modelBuilder.Entity("Videoteka.API.Models.Reziser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reziser");
                });

            modelBuilder.Entity("Videoteka.API.Models.Zanr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FilmId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Zanr");
                });

            modelBuilder.Entity("Videoteka.API.Models.Film", b =>
                {
                    b.HasOne("Videoteka.API.Models.Reziser", "Reziser")
                        .WithMany()
                        .HasForeignKey("ReziserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reziser");
                });

            modelBuilder.Entity("Videoteka.API.Models.IgralecFilma", b =>
                {
                    b.HasOne("Videoteka.API.Models.Film", null)
                        .WithMany("SeznamIgralcev")
                        .HasForeignKey("FilmId");
                });

            modelBuilder.Entity("Videoteka.API.Models.Zanr", b =>
                {
                    b.HasOne("Videoteka.API.Models.Film", null)
                        .WithMany("SeznamZanrov")
                        .HasForeignKey("FilmId");
                });

            modelBuilder.Entity("Videoteka.API.Models.Film", b =>
                {
                    b.Navigation("SeznamIgralcev");

                    b.Navigation("SeznamZanrov");
                });
#pragma warning restore 612, 618
        }
    }
}
